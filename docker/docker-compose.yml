## Primary File  : docker-compose.yml
## Override File : docker-compose.override.yml (automatically included if present)
## docker compose config
## docker compose up --build
## https://docs.localstack.cloud/getting-started/installation/#docker-compose
## Specifies the Docker Compose file version
version: "3.9"  # Use the latest version that supports your features

## Defines networks that can be used by services in the Docker Compose file
networks:
  ## Declares a network named "back_tier"
  back_tier:
    # driver: bridge
  front_tier:
  jupyter_network:
  r_network:


## https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html#image-relationships
## https://github.com/jupyter/docker-stacks/blob/main/images/base-notebook/Dockerfile#L58
## Use the official Jupyter Docker Stacks
## "jupyter/base-notebook:latest"
## "jupyter/minimal-notebook:latest"
## "jupyter/scipy-notebook:latest"
## "jupyter/r-notebook:latest"
## "jupyter/tensorflow-notebook:latest"
## "jupyter/pytorch-notebook:latest"
## "jupyter/pyspark-notebook:latest"
## Declares services (containers) that will be run by Docker Compose
services:

  ## docker compose up --build scipy_notebook -d
  scipy_notebook:
    container_name: "scipy_notebook_main"
    stdin_open: true # used for interactive debugging
    tty: true # used for interactive debugging
    ## Restart policy: always restart the container if it stops
    restart: "always"
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: "${BASE_IMAGE:-jupyter/scipy-notebook:latest}"
    ## Adjust the working directory as needed
    working_dir: "/home/jovyan/work"
    ## Specifies the environment file to use
    # env_file: ".env"
    environment:
      ## Optionally override JUPYTER_PORT if needed
      JUPYTER_PORT: 8888
      # JUPYTER_ENABLE_LAB: yes
      PROJECT_NAME: "mageai-mlops"  # mageai
      USER_CODE_PATH: "/home/jovyan/work/${PROJECT_NAME}"  # mageai
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]  # Reserve GPU for this service (optional for GPU hosts)
    runtime: nvidia  # Enable NVIDIA runtime for GPU support (only if GPU is available)
    ## Change default port to 8889 if needed
    # command: start-notebook.py --port ${JUPYTER_PORT}
    ports:
      ## Map host port 8888 to container port 8888 (default)
      - "8888:8888"  # scipy
      - "5000:5000"
      - "9000:9000"
    volumes:
      - ".:/home/jovyan/work"
    networks:
      - "back_tier"
      - "front_tier"
      - "jupyter_network"

  ## docker compose up --build tensorflow_notebook -d
  tensorflow_notebook:
    container_name: "tensorflow_notebook_main"  # Image: 33Gb+
    stdin_open: true # used for interactive debugging
    tty: true # used for interactive debugging
    ## Restart policy: always restart the container if it stops
    restart: "always"
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: "${BASE_IMAGE:-jupyter/tensorflow-notebook:latest}"
    ## Adjust the working directory as needed
    working_dir: "/home/jovyan/work"
    ## Specifies the environment file to use
    # env_file: ".env"
    environment:
      ## Optionally override JUPYTER_PORT if needed
      JUPYTER_PORT: 8889
      # JUPYTER_ENABLE_LAB: yes
      PROJECT_NAME: "mageai-mlops"  # mageai
      USER_CODE_PATH: "/home/jovyan/work/${PROJECT_NAME}"  # mageai
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]  # Reserve GPU for this service (optional for GPU hosts)
    runtime: nvidia  # Enable NVIDIA runtime for GPU support (only if GPU is available)
    ## Change default port to 8889 if needed
    # command: start-notebook.py --port ${JUPYTER_PORT}
    ports:
      ## Map host port 8888 to container port 8888 (default)
      - "8889:8889"  # tensorflow gpu
    volumes:
      - ".:/home/jovyan/work"
    networks:
      - "back_tier"
      - "front_tier"
      - "jupyter_network"

  ## docker-compose up --build r_notebook
  r_notebook:
    container_name: "r_notebook_main"
    stdin_open: true # used for interactive debugging
    tty: true # used for interactive debugging
    ## Restart policy: always restart the container if it stops
    restart: "always"
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: "${BASE_IMAGE:-jupyter/r-notebook:latest}"
    ## Adjust the working directory as needed
    working_dir: "/home/jovyan/work"
    ## Specifies the environment file to use
    # env_file: ".env"
    environment:
      ## Optionally override JUPYTER_PORT if needed
      JUPYTER_PORT: 8890
      # JUPYTER_ENABLE_LAB: yes
    ## Change default port to 8890 if needed
    # command: start-notebook.py --port ${JUPYTER_PORT}
    ports:
      ## Map host port 8890 to container port 8890 (default)
      - "8890:8890"
      - "9002:9002"
    volumes:
      - ".:/home/jovyan/work"
    networks:
      - "back_tier"
      - "front_tier"
      - "r_network"
